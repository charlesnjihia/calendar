{
  "_args": [
    [
      {
        "raw": "react-native-orientation",
        "scope": null,
        "escapedName": "react-native-orientation",
        "name": "react-native-orientation",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "D:\\Workspace\\calendar"
    ]
  ],
  "_from": "react-native-orientation@latest",
  "_id": "react-native-orientation@3.1.3",
  "_inCache": true,
  "_location": "/react-native-orientation",
  "_nodeVersion": "8.8.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-native-orientation-3.1.3.tgz_1514708967250_0.11057035438716412"
  },
  "_npmUser": {
    "name": "stoneman1",
    "email": "aleksi1578@gmail.com"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-orientation",
    "scope": null,
    "escapedName": "react-native-orientation",
    "name": "react-native-orientation",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-orientation/-/react-native-orientation-3.1.3.tgz",
  "_shasum": "d45803841fe94b6cce9acbe904fd5ca191a3711e",
  "_shrinkwrap": null,
  "_spec": "react-native-orientation",
  "_where": "D:\\Workspace\\calendar",
  "author": {
    "name": "Yamill Vallecillo",
    "email": "yamill@gmail.com",
    "url": "github.com/yamill"
  },
  "bugs": {
    "url": "https://github.com/yamill/react-native-orientation/issues"
  },
  "contributors": [
    {
      "name": "AndrÃ© Neves",
      "email": "@andrerfneves",
      "url": "https://andrenev.es"
    },
    {
      "name": "Aleksi Pousar",
      "email": "aleksi1578@msn.com"
    }
  ],
  "dependencies": {},
  "description": "Listen to device orientation changes in React Native applications and programmatically set preferred orientations on a per screen basis",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-A0h0E+2f95X4avmhaBG1ZT8WDxBACA/q//JN2eF1E7kq8AJVxt5XDiavv+aSBkBlqFsfF3bIS+T/DB5mXmnxuA==",
    "shasum": "d45803841fe94b6cce9acbe904fd5ca191a3711e",
    "tarball": "https://registry.npmjs.org/react-native-orientation/-/react-native-orientation-3.1.3.tgz"
  },
  "gitHead": "b1d2fc434a058f93d18df7394ba1adecfc9f56d4",
  "homepage": "https://github.com/yamill/react-native-orientation#readme",
  "keywords": [
    "orientation",
    "react-native",
    "ios",
    "android"
  ],
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "andrerfneves",
      "email": "me@andreneves.me"
    },
    {
      "name": "stoneman1",
      "email": "aleksi1578@gmail.com"
    },
    {
      "name": "yamill",
      "email": "yamill@gmail.com"
    }
  ],
  "name": "react-native-orientation",
  "optionalDependencies": {},
  "peerDependencies": {
    "react-native": ">=0.40"
  },
  "readme": "## React Native Orientation\n[![npm version](https://badge.fury.io/js/react-native-orientation.svg)](https://badge.fury.io/js/react-native-orientation)\n\nListen to device orientation changes in React Native applications and programmatically set preferred orientation on a per screen basis. Works on both Android and iOS.\n\n## Installing\n\n```\nnpm install react-native-orientation --save\n```\n\n## Linking Native Dependencies\n\n### Automatic Linking\n\n```\nreact-native link react-native-orientation\n```\n\nPlease note that you **still need to manually configure** a couple files even when using automatic linking. Please see the ['Configuration'](#configuration) section below. You will also **need to restart your simulator** before the package will work properly.\n\n### Manual Linking\n\n**iOS**\n\n1. Add `node_modules/react-native-orientation/iOS/RCTOrientation.xcodeproj` to your xcode project, usually under the `Libraries` group\n2. Add `libRCTOrientation.a` (from `Products` under `RCTOrientation.xcodeproj`) to build target's `Linked Frameworks and Libraries` list\n3. Add `$(SRCROOT)/node_modules/react-native-orientation/iOS/RCTOrientation/` to `Project Name` -> `Build Settings` -> `Header Search Paths`\n\n\n**Android**\n\n1. In `android/setting.gradle`\n\n    ```\n    ...\n    include ':react-native-orientation', ':app'\n    project(':react-native-orientation').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-orientation/android')\n    ```\n\n2. In `android/app/build.gradle`\n\n    ```\n    ...\n    dependencies {\n        ...\n        compile project(':react-native-orientation')\n    }\n    ```\n\n3. Register module in `MainApplication.java`\n\n    ```java\n    import com.github.yamill.orientation.OrientationPackage;  // <--- import\n\n    public class MainApplication extends Application implements ReactApplication {\n      ......\n\n      @Override\n      protected List<ReactPackage> getPackages() {\n          return Arrays.<ReactPackage>asList(\n              new MainReactPackage(),\n              new OrientationPackage()      <------- Add this\n          );\n      }\n\n      ......\n\n    }\n    ```\n\n### Configuration\n\n**iOS**\n\nAdd the following to your project's `AppDelegate.m`:\n\n```objc\n#import \"Orientation.h\" // <--- import\n\n@implementation AppDelegate\n\n  // ...\n\n  - (UIInterfaceOrientationMask)application:(UIApplication *)application supportedInterfaceOrientationsForWindow:(UIWindow *)window {\n    while ([[UIDevice currentDevice] isGeneratingDeviceOrientationNotifications]) {\n        [[UIDevice currentDevice] endGeneratingDeviceOrientationNotifications];\n    }\n  \n    return [Orientation getOrientation];\n  }\n\n@end\n```\n\n**Android**\n\nImplement `onConfigurationChanged` method in `MainActivity.java`\n\n```java\n    import android.content.Intent; // <--- import\n    import android.content.res.Configuration; // <--- import\n\n    public class MainActivity extends ReactActivity {\n      ......\n      @Override\n      public void onConfigurationChanged(Configuration newConfig) {\n        super.onConfigurationChanged(newConfig);\n        Intent intent = new Intent(\"onConfigurationChanged\");\n        intent.putExtra(\"newConfig\", newConfig);\n        this.sendBroadcast(intent);\n    }\n\n      ......\n\n    }\n```\n\n## Usage\n\nTo use the `react-native-orientation` package in your codebase, you should use the Orientation module:\n```javascript\nimport Orientation from 'react-native-orientation';\n```\n\n```javascript\nexport default class AppScreen extends Component {\n  // ...\n\n  componentWillMount() {\n    // The getOrientation method is async. It happens sometimes that\n    // you need the orientation at the moment the JS runtime starts running on device.\n    // `getInitialOrientation` returns directly because its a constant set at the\n    // beginning of the JS runtime.\n\n    const initial = Orientation.getInitialOrientation();\n    if (initial === 'PORTRAIT') {\n      // do something\n    } else {\n      // do something else\n    }\n  },\n\n  componentDidMount() {\n    // this locks the view to Portrait Mode\n    Orientation.lockToPortrait();\n\n    // this locks the view to Landscape Mode\n    // Orientation.lockToLandscape();\n\n    // this unlocks any previous locks to all Orientations\n    // Orientation.unlockAllOrientations();\n\n    Orientation.addOrientationListener(this._orientationDidChange);\n  },\n\n  _orientationDidChange = (orientation) => {\n    if (orientation === 'LANDSCAPE') {\n      // do something with landscape layout\n    } else {\n      // do something with portrait layout\n    }\n  },\n\n  componentWillUnmount() {\n    Orientation.getOrientation((err, orientation) => {\n      console.log(`Current Device Orientation: ${orientation}`);\n    });\n\n\n    // Remember to remove listener\n    Orientation.removeOrientationListener(this._orientationDidChange);\n  }\n\n  render() {\n    // ...\n\n    return (\n      // ...\n    )\n  }\n}\n```\n\n## Orientation Events\n\n```javascript\naddOrientationListener((orientation) => {});\n```\n\n`orientation` will return one of the following values:\n- `LANDSCAPE`\n- `PORTRAIT`\n- `PORTRAITUPSIDEDOWN`\n- `UNKNOWN`\n\n```javascript\nremoveOrientationListener((orientation) => {});\n```\n\n```javascript\naddSpecificOrientationListener((specificOrientation) => {});\n```\n\n`specificOrientation` will return one of the following values:\n- `LANDSCAPE-LEFT`\n- `LANDSCAPE-RIGHT`\n- `PORTRAIT`\n- `PORTRAITUPSIDEDOWN`\n- `UNKNOWN`\n\n```javascript\nremoveSpecificOrientationListener((specificOrientation) => {});\n```\n\n## API\n\n- `lockToPortrait()`\n- `lockToLandscape()`\n- `lockToLandscapeLeft()`\n- `lockToLandscapeRight()`\n- `unlockAllOrientations()`\n- `getOrientation((err, orientation) => {})`\n- `getSpecificOrientation((err, specificOrientation) => {})`\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yamill/react-native-orientation.git"
  },
  "rnpm": {
    "android": {
      "packageInstance": "new OrientationPackage()"
    },
    "ios": {
      "project": "iOS/RCTOrientation.xcodeproj"
    }
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "3.1.3"
}
